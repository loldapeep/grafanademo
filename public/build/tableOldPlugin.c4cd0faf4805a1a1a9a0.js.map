{"version":3,"file":"tableOldPlugin.c4cd0faf4805a1a1a9a0.js","mappings":"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","sources":["webpack://grafana/./public/app/angular/AngularLocationWrapper.ts","webpack://grafana/./public/app/angular/panel/metrics_panel_ctrl.ts","webpack://grafana/./public/app/angular/panel/panel_ctrl.ts","webpack://grafana/./public/app/angular/panel/query_ctrl.ts","webpack://grafana/./public/app/features/variables/adhoc/actions.ts","webpack://grafana/./public/app/features/variables/adhoc/reducer.ts","webpack://grafana/./public/app/plugins/panel/table-old/column_options.ts","webpack://grafana/./public/app/plugins/panel/table-old/editor.ts","webpack://grafana/./public/app/plugins/panel/table-old/module.ts","webpack://grafana/./public/app/plugins/panel/table-old/renderer.ts","webpack://grafana/./public/app/plugins/panel/table-old/transformers.ts","webpack://grafana/./public/app/plugins/sdk.ts"],"sourcesContent":["import { deprecationWarning, urlUtil } from '@grafana/data';\nimport { locationSearchToObject, locationService, navigationLogger } from '@grafana/runtime';\n\n// Ref: https://github.com/angular/angular.js/blob/ae8e903edf88a83fedd116ae02c0628bf72b150c/src/ng/location.js#L5\nconst DEFAULT_PORTS: Record<string, number> = { http: 80, https: 443, ftp: 21 };\n\nexport class AngularLocationWrapper {\n  constructor() {\n    this.absUrl = this.wrapInDeprecationWarning(this.absUrl);\n    this.hash = this.wrapInDeprecationWarning(this.hash);\n    this.host = this.wrapInDeprecationWarning(this.host);\n    this.path = this.wrapInDeprecationWarning(this.path);\n    this.port = this.wrapInDeprecationWarning(this.port, 'window.location');\n    this.protocol = this.wrapInDeprecationWarning(this.protocol, 'window.location');\n    this.replace = this.wrapInDeprecationWarning(this.replace);\n    this.search = this.wrapInDeprecationWarning(this.search);\n    this.state = this.wrapInDeprecationWarning(this.state);\n    this.url = this.wrapInDeprecationWarning(this.url);\n  }\n\n  wrapInDeprecationWarning(fn: Function, replacement?: string) {\n    let self = this;\n\n    return function wrapper() {\n      deprecationWarning('$location', fn.name, replacement || 'locationService');\n      return fn.apply(self, arguments);\n    };\n  }\n\n  absUrl(): string {\n    return `${window.location.origin}${this.url()}`;\n  }\n\n  hash(newHash?: string | null) {\n    navigationLogger('AngularLocationWrapper', false, 'Angular compat layer: hash');\n\n    if (!newHash) {\n      return locationService.getLocation().hash.slice(1);\n    } else {\n      throw new Error('AngularLocationWrapper method not implemented.');\n    }\n  }\n\n  host(): string {\n    return new URL(window.location.href).hostname;\n  }\n\n  path(pathname?: any) {\n    navigationLogger('AngularLocationWrapper', false, 'Angular compat layer: path');\n\n    const location = locationService.getLocation();\n\n    if (pathname !== undefined && pathname !== null) {\n      let parsedPath = String(pathname);\n      parsedPath = parsedPath.startsWith('/') ? parsedPath : `/${parsedPath}`;\n      const url = new URL(`${window.location.origin}${parsedPath}`);\n\n      locationService.push({\n        pathname: url.pathname,\n        search: url.search.length > 0 ? url.search : location.search,\n        hash: url.hash.length > 0 ? url.hash : location.hash,\n      });\n      return this;\n    }\n\n    if (pathname === null) {\n      locationService.push('/');\n      return this;\n    }\n\n    return location.pathname;\n  }\n\n  port(): number | null {\n    const url = new URL(window.location.href);\n    return parseInt(url.port, 10) || DEFAULT_PORTS[url.protocol] || null;\n  }\n\n  protocol(): string {\n    return new URL(window.location.href).protocol.slice(0, -1);\n  }\n\n  replace() {\n    throw new Error('AngularLocationWrapper method not implemented.');\n  }\n\n  search(search?: any, paramValue?: any) {\n    navigationLogger('AngularLocationWrapper', false, 'Angular compat layer: search');\n    if (!search) {\n      return locationService.getSearchObject();\n    }\n\n    if (search && arguments.length > 1) {\n      locationService.partial({\n        [search]: paramValue,\n      });\n\n      return this;\n    }\n\n    if (search) {\n      let newQuery;\n\n      if (typeof search === 'object') {\n        newQuery = { ...search };\n      } else {\n        newQuery = locationSearchToObject(search);\n      }\n\n      for (const key in newQuery) {\n        // removing params with null | undefined\n        if (newQuery[key] === null || newQuery[key] === undefined) {\n          delete newQuery[key];\n        }\n      }\n\n      const updatedUrl = urlUtil.renderUrl(locationService.getLocation().pathname, newQuery);\n      locationService.push(updatedUrl);\n    }\n\n    return this;\n  }\n\n  state(state?: any) {\n    navigationLogger('AngularLocationWrapper', false, 'Angular compat layer: state');\n    throw new Error('AngularLocationWrapper method not implemented.');\n  }\n\n  url(newUrl?: any) {\n    navigationLogger('AngularLocationWrapper', false, 'Angular compat layer: url');\n\n    if (newUrl !== undefined) {\n      if (newUrl.startsWith('#')) {\n        locationService.push({ ...locationService.getLocation(), hash: newUrl });\n      } else if (newUrl.startsWith('?')) {\n        locationService.push({ ...locationService.getLocation(), search: newUrl });\n      } else if (newUrl.trim().length === 0) {\n        locationService.push('/');\n      } else {\n        locationService.push(newUrl);\n      }\n\n      return locationService;\n    }\n\n    const location = locationService.getLocation();\n    return `${location.pathname}${location.search}${location.hash}`;\n  }\n}\n","import { isArray } from 'lodash';\nimport { Unsubscribable } from 'rxjs';\n\nimport {\n  DataFrame,\n  DataQueryResponse,\n  DataSourceApi,\n  LegacyResponseData,\n  LoadingState,\n  PanelData,\n  PanelEvents,\n  TimeRange,\n  toDataFrameDTO,\n  toLegacyResponseData,\n} from '@grafana/data';\nimport { PanelCtrl } from './panel_ctrl';\nimport { ContextSrv } from '../../core/services/context_srv';\nimport { PanelModel } from '../../features/dashboard/state';\nimport { applyPanelTimeOverrides } from '../../features/dashboard/utils/panel';\n\nimport { PanelQueryRunner } from '../../features/query/state/PanelQueryRunner';\n\nclass MetricsPanelCtrl extends PanelCtrl {\n  declare datasource: DataSourceApi;\n  declare range: TimeRange;\n\n  contextSrv: ContextSrv;\n  datasourceSrv: any;\n  timeSrv: any;\n  templateSrv: any;\n  interval: any;\n  intervalMs: any;\n  resolution: any;\n  timeInfo?: string;\n  skipDataOnInit = false;\n  dataList: LegacyResponseData[] = [];\n  querySubscription?: Unsubscribable | null;\n  useDataFrames = false;\n  panelData?: PanelData;\n\n  constructor($scope: any, $injector: any) {\n    super($scope, $injector);\n\n    this.contextSrv = $injector.get('contextSrv');\n    this.datasourceSrv = $injector.get('datasourceSrv');\n    this.timeSrv = $injector.get('timeSrv');\n    this.templateSrv = $injector.get('templateSrv');\n    this.panel.datasource = this.panel.datasource || null;\n\n    this.events.on(PanelEvents.refresh, this.onMetricsPanelRefresh.bind(this));\n    this.events.on(PanelEvents.panelTeardown, this.onPanelTearDown.bind(this));\n    this.events.on(PanelEvents.componentDidMount, this.onMetricsPanelMounted.bind(this));\n  }\n\n  private onMetricsPanelMounted() {\n    const queryRunner = this.panel.getQueryRunner() as PanelQueryRunner;\n    this.querySubscription = queryRunner\n      .getData({ withTransforms: true, withFieldConfig: true })\n      .subscribe(this.panelDataObserver);\n  }\n\n  private onPanelTearDown() {\n    if (this.querySubscription) {\n      this.querySubscription.unsubscribe();\n      this.querySubscription = null;\n    }\n  }\n\n  private onMetricsPanelRefresh() {\n    // ignore fetching data if another panel is in fullscreen\n    if (this.otherPanelInFullscreenMode()) {\n      return;\n    }\n\n    // if we have snapshot data use that\n    if (this.panel.snapshotData) {\n      this.updateTimeRange();\n      let data = this.panel.snapshotData;\n      // backward compatibility\n      if (!isArray(data)) {\n        data = data.data;\n      }\n\n      this.panelData = {\n        state: LoadingState.Done,\n        series: data,\n        timeRange: this.range,\n      };\n\n      // Defer panel rendering till the next digest cycle.\n      // For some reason snapshot panels don't init at this time, so this helps to avoid rendering issues.\n      return this.$timeout(() => {\n        this.events.emit(PanelEvents.dataSnapshotLoad, data);\n      });\n    }\n\n    // clear loading/error state\n    delete this.error;\n    this.loading = true;\n\n    // load datasource service\n    return this.datasourceSrv\n      .get(this.panel.datasource, this.panel.scopedVars)\n      .then(this.issueQueries.bind(this))\n      .catch((err: any) => {\n        this.processDataError(err);\n      });\n  }\n\n  processDataError(err: any) {\n    // if canceled  keep loading set to true\n    if (err.cancelled) {\n      console.log('Panel request cancelled', err);\n      return;\n    }\n\n    this.error = err.message || 'Request Error';\n\n    if (err.data) {\n      if (err.data.message) {\n        this.error = err.data.message;\n      } else if (err.data.error) {\n        this.error = err.data.error;\n      }\n    }\n\n    this.angularDirtyCheck();\n  }\n\n  angularDirtyCheck() {\n    if (!this.$scope.$root.$$phase) {\n      this.$scope.$digest();\n    }\n  }\n\n  // Updates the response with information from the stream\n  panelDataObserver = {\n    next: (data: PanelData) => {\n      this.panelData = data;\n\n      if (data.state === LoadingState.Error) {\n        this.loading = false;\n        this.processDataError(data.error);\n      }\n\n      // Ignore data in loading state\n      if (data.state === LoadingState.Loading) {\n        this.loading = true;\n        this.angularDirtyCheck();\n        return;\n      }\n\n      if (data.request) {\n        const { timeInfo } = data.request;\n        if (timeInfo) {\n          this.timeInfo = timeInfo;\n        }\n      }\n\n      if (data.timeRange) {\n        this.range = data.timeRange;\n      }\n\n      if (this.useDataFrames) {\n        this.handleDataFrames(data.series);\n      } else {\n        // Make the results look as if they came directly from a <6.2 datasource request\n        const legacy = data.series.map((v) => toLegacyResponseData(v));\n        this.handleQueryResult({ data: legacy });\n      }\n\n      this.angularDirtyCheck();\n    },\n  };\n\n  updateTimeRange(datasource?: DataSourceApi) {\n    this.datasource = datasource || this.datasource;\n    this.range = this.timeSrv.timeRange();\n\n    const newTimeData = applyPanelTimeOverrides(this.panel, this.range);\n    this.timeInfo = newTimeData.timeInfo;\n    this.range = newTimeData.timeRange;\n  }\n\n  issueQueries(datasource: DataSourceApi) {\n    this.updateTimeRange(datasource);\n\n    this.datasource = datasource;\n\n    const panel = this.panel as PanelModel;\n    const queryRunner = panel.getQueryRunner();\n\n    return queryRunner.run({\n      datasource: panel.datasource,\n      queries: panel.targets,\n      panelId: panel.id,\n      dashboardUID: this.dashboard.uid,\n      timezone: this.dashboard.getTimezone(),\n      timeInfo: this.timeInfo,\n      timeRange: this.range,\n      maxDataPoints: panel.maxDataPoints || this.width,\n      minInterval: panel.interval,\n      scopedVars: panel.scopedVars,\n      cacheTimeout: panel.cacheTimeout,\n      queryCachingTTL: panel.queryCachingTTL,\n      transformations: panel.transformations,\n    });\n  }\n\n  handleDataFrames(data: DataFrame[]) {\n    this.loading = false;\n\n    if (this.dashboard && this.dashboard.snapshot) {\n      this.panel.snapshotData = data.map((frame) => toDataFrameDTO(frame));\n    }\n\n    try {\n      this.events.emit(PanelEvents.dataFramesReceived, data);\n    } catch (err) {\n      this.processDataError(err);\n    }\n  }\n\n  handleQueryResult(result: DataQueryResponse) {\n    this.loading = false;\n\n    if (this.dashboard.snapshot) {\n      this.panel.snapshotData = result.data;\n    }\n\n    if (!result || !result.data) {\n      console.log('Data source query result invalid, missing data field:', result);\n      result = { data: [] };\n    }\n\n    try {\n      this.events.emit(PanelEvents.dataReceived, result.data);\n    } catch (err) {\n      this.processDataError(err);\n    }\n  }\n}\n\nexport { MetricsPanelCtrl };\n","import { auto } from 'angular';\nimport { isString } from 'lodash';\n\nimport {\n  AppEvent,\n  PanelEvents,\n  PanelPluginMeta,\n  AngularPanelMenuItem,\n  EventBusExtended,\n  EventBusSrv,\n} from '@grafana/data';\nimport { AngularLocationWrapper } from '../AngularLocationWrapper';\nimport config from '../../core/config';\nimport { profiler } from '../../core/core';\n\nimport { DashboardModel } from '../../features/dashboard/state';\n\nexport class PanelCtrl {\n  panel: any;\n  error: any;\n  declare dashboard: DashboardModel;\n  pluginName = '';\n  pluginId = '';\n  editorTabs: any;\n  $scope: any;\n  $injector: auto.IInjectorService;\n  $timeout: any;\n  editModeInitiated = false;\n  declare height: number;\n  declare width: number;\n  containerHeight: any;\n  events: EventBusExtended;\n  loading = false;\n  timing: any;\n  $location: AngularLocationWrapper;\n\n  constructor($scope: any, $injector: auto.IInjectorService) {\n    this.panel = this.panel ?? $scope.$parent.panel;\n    this.dashboard = this.dashboard ?? $scope.$parent.dashboard;\n    this.$injector = $injector;\n    this.$scope = $scope;\n    this.$timeout = $injector.get('$timeout');\n    this.editorTabs = [];\n    this.$location = new AngularLocationWrapper();\n    this.events = new EventBusSrv();\n    this.timing = {}; // not used but here to not break plugins\n\n    const plugin = config.panels[this.panel.type];\n    if (plugin) {\n      this.pluginId = plugin.id;\n      this.pluginName = plugin.name;\n    }\n\n    $scope.$on(PanelEvents.componentDidMount.name, () => this.panelDidMount());\n  }\n\n  panelDidMount() {\n    this.events.emit(PanelEvents.componentDidMount);\n    this.events.emit(PanelEvents.initialized);\n    this.dashboard.panelInitialized(this.panel);\n  }\n\n  renderingCompleted() {\n    profiler.renderingCompleted();\n  }\n\n  refresh() {\n    this.panel.refresh();\n  }\n\n  publishAppEvent<T>(event: AppEvent<T>, payload?: T) {\n    this.$scope.$root.appEvent(event, payload);\n  }\n\n  initEditMode() {\n    if (!this.editModeInitiated) {\n      this.editModeInitiated = true;\n      this.events.emit(PanelEvents.editModeInitialized);\n    }\n  }\n\n  addEditorTab(title: string, directiveFn: any, index?: number, icon?: any) {\n    const editorTab = { title, directiveFn, icon };\n\n    if (isString(directiveFn)) {\n      editorTab.directiveFn = () => {\n        return { templateUrl: directiveFn };\n      };\n    }\n\n    if (index) {\n      this.editorTabs.splice(index, 0, editorTab);\n    } else {\n      this.editorTabs.push(editorTab);\n    }\n  }\n\n  getExtendedMenu() {\n    const menu: AngularPanelMenuItem[] = [];\n    this.events.emit(PanelEvents.initPanelActions, menu);\n    return menu;\n  }\n\n  // Override in sub-class to add items before extended menu\n  async getAdditionalMenuItems(): Promise<any[]> {\n    return [];\n  }\n\n  otherPanelInFullscreenMode() {\n    return this.dashboard.otherPanelInFullscreen(this.panel);\n  }\n\n  render(payload?: any) {\n    this.events.emit(PanelEvents.render, payload);\n  }\n\n  // overriden from react\n  onPluginTypeChange = (plugin: PanelPluginMeta) => {};\n}\n","import { auto } from 'angular';\nimport { indexOf } from 'lodash';\n\nexport class QueryCtrl<T = any> {\n  target!: T;\n  datasource!: any;\n  panelCtrl!: any;\n  panel: any;\n  hasRawMode!: boolean;\n  error?: string | null;\n  isLastQuery: boolean;\n\n  constructor(\n    public $scope: any,\n    public $injector: auto.IInjectorService\n  ) {\n    this.panelCtrl = this.panelCtrl ?? $scope.ctrl.panelCtrl;\n    this.target = this.target ?? $scope.ctrl.target;\n    this.datasource = this.datasource ?? $scope.ctrl.datasource;\n    this.panel = this.panelCtrl?.panel ?? $scope.ctrl.panelCtrl.panel;\n    this.isLastQuery = indexOf(this.panel.targets, this.target) === this.panel.targets.length - 1;\n  }\n\n  refresh() {\n    this.panelCtrl.refresh();\n  }\n}\n","import { cloneDeep } from 'lodash';\n\nimport { AdHocVariableFilter, AdHocVariableModel, DataSourceRef } from '@grafana/data';\nimport { getDatasourceSrv } from '../../plugins/datasource_srv';\nimport { StoreState, ThunkResult } from '../../../types';\n\nimport { changeVariableEditorExtended } from '../editor/reducer';\nimport { isAdHoc } from '../guard';\nimport { variableUpdated } from '../state/actions';\nimport { toKeyedAction } from '../state/keyedVariablesReducer';\nimport { getLastKey, getNewVariableIndex, getVariable, getVariablesState } from '../state/selectors';\nimport { addVariable, changeVariableProp } from '../state/sharedReducer';\nimport { AddVariable, KeyedVariableIdentifier } from '../state/types';\nimport { toKeyedVariableIdentifier, toVariablePayload } from '../utils';\n\nimport {\n  AdHocVariabelFilterUpdate,\n  filterAdded,\n  filterRemoved,\n  filtersRestored,\n  filterUpdated,\n  initialAdHocVariableModelState,\n} from './reducer';\n\nexport interface AdHocTableOptions {\n  datasource: DataSourceRef;\n  key: string;\n  value: string;\n  operator: string;\n}\n\nconst filterTableName = 'Filters';\n\nexport const applyFilterFromTable = (options: AdHocTableOptions): ThunkResult<void> => {\n  return async (dispatch, getState) => {\n    let variable = getVariableByOptions(options, getState());\n\n    if (!variable) {\n      dispatch(createAdHocVariable(options));\n      variable = getVariableByOptions(options, getState());\n      if (!variable) {\n        return;\n      }\n    }\n\n    const index = variable.filters.findIndex((f) => f.key === options.key && f.value === options.value);\n\n    if (index === -1) {\n      const { value, key, operator } = options;\n      const filter = { value, key, operator };\n      return await dispatch(addFilter(toKeyedVariableIdentifier(variable), filter));\n    }\n\n    const filter = { ...variable.filters[index], operator: options.operator };\n    return await dispatch(changeFilter(toKeyedVariableIdentifier(variable), { index, filter }));\n  };\n};\n\nexport const changeFilter = (\n  identifier: KeyedVariableIdentifier,\n  update: AdHocVariabelFilterUpdate\n): ThunkResult<void> => {\n  return async (dispatch, getState) => {\n    const variable = getVariable(identifier, getState());\n    dispatch(toKeyedAction(identifier.rootStateKey, filterUpdated(toVariablePayload(variable, update))));\n    await dispatch(variableUpdated(toKeyedVariableIdentifier(variable), true));\n  };\n};\n\nexport const removeFilter = (identifier: KeyedVariableIdentifier, index: number): ThunkResult<void> => {\n  return async (dispatch, getState) => {\n    const variable = getVariable(identifier, getState());\n    dispatch(toKeyedAction(identifier.rootStateKey, filterRemoved(toVariablePayload(variable, index))));\n    await dispatch(variableUpdated(toKeyedVariableIdentifier(variable), true));\n  };\n};\n\nexport const addFilter = (identifier: KeyedVariableIdentifier, filter: AdHocVariableFilter): ThunkResult<void> => {\n  return async (dispatch, getState) => {\n    const variable = getVariable(identifier, getState());\n    dispatch(toKeyedAction(identifier.rootStateKey, filterAdded(toVariablePayload(variable, filter))));\n    await dispatch(variableUpdated(toKeyedVariableIdentifier(variable), true));\n  };\n};\n\nexport const setFiltersFromUrl = (\n  identifier: KeyedVariableIdentifier,\n  filters: AdHocVariableFilter[]\n): ThunkResult<void> => {\n  return async (dispatch, getState) => {\n    const variable = getVariable(identifier, getState());\n    dispatch(toKeyedAction(identifier.rootStateKey, filtersRestored(toVariablePayload(variable, filters))));\n    await dispatch(variableUpdated(toKeyedVariableIdentifier(variable), true));\n  };\n};\n\nexport const changeVariableDatasource = (\n  identifier: KeyedVariableIdentifier,\n  datasource?: DataSourceRef\n): ThunkResult<void> => {\n  return async (dispatch, getState) => {\n    const variable = getVariable(identifier, getState());\n    dispatch(\n      toKeyedAction(\n        identifier.rootStateKey,\n        changeVariableProp(toVariablePayload(variable, { propName: 'datasource', propValue: datasource }))\n      )\n    );\n\n    const ds = await getDatasourceSrv().get(datasource);\n\n    // TS TODO: ds is not typed to be optional - is this check unnecessary or is the type incorrect?\n    const message = ds?.getTagKeys\n      ? 'Ad hoc filters are applied automatically to all queries that target this data source'\n      : 'This data source does not support ad hoc filters yet.';\n\n    dispatch(\n      toKeyedAction(\n        identifier.rootStateKey,\n        changeVariableEditorExtended({\n          infoText: message,\n        })\n      )\n    );\n  };\n};\n\nconst createAdHocVariable = (options: AdHocTableOptions): ThunkResult<void> => {\n  return (dispatch, getState) => {\n    const key = getLastKey(getState());\n\n    const model: AdHocVariableModel = {\n      ...cloneDeep(initialAdHocVariableModelState),\n      datasource: options.datasource,\n      name: filterTableName,\n      id: filterTableName,\n      rootStateKey: key,\n    };\n\n    const global = false;\n    const index = getNewVariableIndex(key, getState());\n    const identifier: KeyedVariableIdentifier = { type: 'adhoc', id: model.id, rootStateKey: key };\n\n    dispatch(toKeyedAction(key, addVariable(toVariablePayload<AddVariable>(identifier, { global, model, index }))));\n  };\n};\n\nconst getVariableByOptions = (options: AdHocTableOptions, state: StoreState): AdHocVariableModel | undefined => {\n  const key = getLastKey(state);\n  const templatingState = getVariablesState(key, state);\n  let result: AdHocVariableModel | undefined;\n  for (const v of Object.values(templatingState.variables)) {\n    if (isAdHoc(v) && v.datasource?.uid === options.datasource.uid) {\n      result = v;\n      break;\n    }\n  }\n  return result;\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { AdHocVariableFilter, AdHocVariableModel } from '@grafana/data';\nimport { initialVariableModelState } from '../types';\n\nimport { getInstanceState } from '../state/selectors';\nimport { initialVariablesState, VariablePayload, VariablesState } from '../state/types';\n\nexport interface AdHocVariabelFilterUpdate {\n  index: number;\n  filter: AdHocVariableFilter;\n}\n\nexport const initialAdHocVariableModelState: AdHocVariableModel = {\n  ...initialVariableModelState,\n  type: 'adhoc',\n  datasource: null,\n  filters: [],\n};\n\nexport const adHocVariableSlice = createSlice({\n  name: 'templating/adhoc',\n  initialState: initialVariablesState,\n  reducers: {\n    filterAdded: (state: VariablesState, action: PayloadAction<VariablePayload<AdHocVariableFilter>>) => {\n      const instanceState = getInstanceState(state, action.payload.id);\n      if (instanceState.type !== 'adhoc') {\n        return;\n      }\n\n      instanceState.filters.push(action.payload.data);\n    },\n    filterRemoved: (state: VariablesState, action: PayloadAction<VariablePayload<number>>) => {\n      const instanceState = getInstanceState(state, action.payload.id);\n      if (instanceState.type !== 'adhoc') {\n        return;\n      }\n\n      const index = action.payload.data;\n      instanceState.filters.splice(index, 1);\n    },\n    filterUpdated: (state: VariablesState, action: PayloadAction<VariablePayload<AdHocVariabelFilterUpdate>>) => {\n      const instanceState = getInstanceState(state, action.payload.id);\n      if (instanceState.type !== 'adhoc') {\n        return;\n      }\n\n      const { filter, index } = action.payload.data;\n      instanceState.filters[index] = filter;\n    },\n    filtersRestored: (state: VariablesState, action: PayloadAction<VariablePayload<AdHocVariableFilter[]>>) => {\n      const instanceState = getInstanceState(state, action.payload.id);\n      if (instanceState.type !== 'adhoc') {\n        return;\n      }\n\n      instanceState.filters = action.payload.data;\n    },\n  },\n});\n\nexport const { filterAdded, filterRemoved, filterUpdated, filtersRestored } = adHocVariableSlice.actions;\nexport const adHocVariableReducer = adHocVariableSlice.reducer;\n","import { map, without } from 'lodash';\n\nimport { getValueFormats } from '@grafana/data';\n\nexport class ColumnOptionsCtrl {\n  panel: any;\n  panelCtrl: any;\n  colorModes: any;\n  columnStyles: any;\n  columnTypes: any;\n  fontSizes: any;\n  dateFormats: any;\n  addColumnSegment: any;\n  unitFormats: any;\n  getColumnNames: any;\n  activeStyleIndex: number;\n  mappingTypes: any;\n\n  alignTypes: any;\n  static readonly alignTypesEnum = [\n    { text: 'auto', value: '' },\n    { text: 'left', value: 'left' },\n    { text: 'center', value: 'center' },\n    { text: 'right', value: 'right' },\n  ];\n\n  static $inject = ['$scope'];\n\n  constructor($scope: any) {\n    $scope.editor = this;\n\n    this.activeStyleIndex = 0;\n    this.panelCtrl = $scope.ctrl;\n    this.panel = this.panelCtrl.panel;\n    this.unitFormats = getValueFormats();\n    this.colorModes = [\n      { text: 'Disabled', value: null },\n      { text: 'Cell', value: 'cell' },\n      { text: 'Value', value: 'value' },\n      { text: 'Row', value: 'row' },\n    ];\n    this.columnTypes = [\n      { text: 'Number', value: 'number' },\n      { text: 'String', value: 'string' },\n      { text: 'Date', value: 'date' },\n      { text: 'Hidden', value: 'hidden' },\n    ];\n    this.fontSizes = ['80%', '90%', '100%', '110%', '120%', '130%', '150%', '160%', '180%', '200%', '220%', '250%'];\n    this.dateFormats = [\n      { text: 'YYYY-MM-DD HH:mm:ss', value: 'YYYY-MM-DD HH:mm:ss' },\n      { text: 'YYYY-MM-DD HH:mm:ss.SSS', value: 'YYYY-MM-DD HH:mm:ss.SSS' },\n      { text: 'MM/DD/YY h:mm:ss a', value: 'MM/DD/YY h:mm:ss a' },\n      { text: 'MMMM D, YYYY LT', value: 'MMMM D, YYYY LT' },\n      { text: 'YYYY-MM-DD', value: 'YYYY-MM-DD' },\n    ];\n    this.mappingTypes = [\n      { text: 'Value to text', value: 1 },\n      { text: 'Range to text', value: 2 },\n    ];\n    this.alignTypes = ColumnOptionsCtrl.alignTypesEnum;\n\n    this.getColumnNames = () => {\n      if (!this.panelCtrl.table) {\n        return [];\n      }\n      return map(this.panelCtrl.table.columns, (col: any) => {\n        return col.text;\n      });\n    };\n\n    this.onColorChange = this.onColorChange.bind(this);\n  }\n\n  render() {\n    this.panelCtrl.render();\n  }\n\n  setUnitFormat(column: any) {\n    return (value: any) => {\n      column.unit = value;\n      this.panelCtrl.render();\n    };\n  }\n\n  addColumnStyle() {\n    const newStyleRule: object = {\n      unit: 'short',\n      type: 'number',\n      alias: '',\n      decimals: 2,\n      colors: ['rgba(245, 54, 54, 0.9)', 'rgba(237, 129, 40, 0.89)', 'rgba(50, 172, 45, 0.97)'],\n      colorMode: null,\n      pattern: '',\n      dateFormat: 'YYYY-MM-DD HH:mm:ss',\n      thresholds: [],\n      mappingType: 1,\n      align: 'auto',\n    };\n\n    const styles = this.panel.styles;\n    const stylesCount = styles.length;\n    let indexToInsert = stylesCount;\n\n    // check if last is a catch all rule, then add it before that one\n    if (stylesCount > 0) {\n      const last = styles[stylesCount - 1];\n      if (last.pattern === '/.*/') {\n        indexToInsert = stylesCount - 1;\n      }\n    }\n\n    styles.splice(indexToInsert, 0, newStyleRule);\n    this.activeStyleIndex = indexToInsert;\n  }\n\n  removeColumnStyle(style: any) {\n    this.panel.styles = without(this.panel.styles, style);\n  }\n\n  invertColorOrder(index: number) {\n    const ref = this.panel.styles[index].colors;\n    const copy = ref[0];\n    ref[0] = ref[2];\n    ref[2] = copy;\n    this.panelCtrl.render();\n  }\n\n  onColorChange(style: any, colorIndex: number) {\n    return (newColor: string) => {\n      style.colors[colorIndex] = newColor;\n      this.render();\n    };\n  }\n\n  addValueMap(style: any) {\n    if (!style.valueMaps) {\n      style.valueMaps = [];\n    }\n    style.valueMaps.push({ value: '', text: '' });\n    this.panelCtrl.render();\n  }\n\n  removeValueMap(style: any, index: number) {\n    style.valueMaps.splice(index, 1);\n    this.panelCtrl.render();\n  }\n\n  addRangeMap(style: any) {\n    if (!style.rangeMaps) {\n      style.rangeMaps = [];\n    }\n    style.rangeMaps.push({ from: '', to: '', text: '' });\n    this.panelCtrl.render();\n  }\n\n  removeRangeMap(style: any, index: number) {\n    style.rangeMaps.splice(index, 1);\n    this.panelCtrl.render();\n  }\n}\n\nexport function columnOptionsTab() {\n  'use strict';\n  return {\n    restrict: 'E',\n    scope: true,\n    templateUrl: 'public/app/plugins/panel/table-old/column_options.html',\n    controller: ColumnOptionsCtrl,\n  };\n}\n","import { find, map, without } from 'lodash';\n\nimport { transformers } from './transformers';\nimport { ColumnStyle } from './types';\n\nexport class TablePanelEditorCtrl {\n  panel: any;\n  panelCtrl: any;\n  transformers: any;\n  fontSizes: any;\n  addColumnSegment: any;\n  getColumnNames: any;\n  canSetColumns = false;\n  columnsHelpMessage = '';\n\n  static $inject = ['$scope', 'uiSegmentSrv'];\n\n  constructor(\n    $scope: any,\n    private uiSegmentSrv: any\n  ) {\n    $scope.editor = this;\n    this.panelCtrl = $scope.ctrl;\n    this.panel = this.panelCtrl.panel;\n    this.transformers = transformers;\n    this.fontSizes = ['80%', '90%', '100%', '110%', '120%', '130%', '150%', '160%', '180%', '200%', '220%', '250%'];\n    this.addColumnSegment = uiSegmentSrv.newPlusButton();\n    this.updateTransformHints();\n  }\n\n  updateTransformHints() {\n    this.canSetColumns = false;\n    this.columnsHelpMessage = '';\n\n    switch (this.panel.transform) {\n      case 'timeseries_aggregations': {\n        this.canSetColumns = true;\n        break;\n      }\n      case 'json': {\n        this.canSetColumns = true;\n        break;\n      }\n      case 'table': {\n        this.columnsHelpMessage = 'Columns and their order are determined by the data query';\n      }\n    }\n  }\n\n  getColumnOptions() {\n    if (!this.panelCtrl.dataRaw) {\n      return Promise.resolve([]);\n    }\n    const columns = this.transformers[this.panel.transform].getColumns(this.panelCtrl.dataRaw);\n    const segments = map(columns, (c: any) => this.uiSegmentSrv.newSegment({ value: c.text }));\n    return Promise.resolve(segments);\n  }\n\n  addColumn() {\n    const columns = transformers[this.panel.transform].getColumns(this.panelCtrl.dataRaw);\n    const column = find(columns, { text: this.addColumnSegment.value });\n\n    if (column) {\n      this.panel.columns.push(column);\n      this.render();\n    }\n\n    const plusButton = this.uiSegmentSrv.newPlusButton();\n    this.addColumnSegment.html = plusButton.html;\n    this.addColumnSegment.value = plusButton.value;\n  }\n\n  transformChanged() {\n    this.panel.columns = [];\n    if (this.panel.transform === 'annotations') {\n      this.panelCtrl.refresh();\n    } else {\n      if (this.panel.transform === 'timeseries_aggregations') {\n        this.panel.columns.push({ text: 'Avg', value: 'avg' });\n      }\n\n      this.updateTransformHints();\n      this.render();\n    }\n  }\n\n  render() {\n    this.panelCtrl.render();\n  }\n\n  removeColumn(column: ColumnStyle) {\n    this.panel.columns = without(this.panel.columns, column);\n    this.panelCtrl.render();\n  }\n}\n\nexport function tablePanelEditor() {\n  'use strict';\n  return {\n    restrict: 'E',\n    scope: true,\n    templateUrl: 'public/app/plugins/panel/table-old/editor.html',\n    controller: TablePanelEditorCtrl,\n  };\n}\n","import { IScope, IAngularStatic } from 'angular';\nimport $ from 'jquery';\nimport { defaults } from 'lodash';\n\nimport { isTableData, PanelEvents, PanelPlugin } from '@grafana/data';\nimport { AnnotationsSrv } from '../../../angular/services/annotations_srv';\nimport config from '../../../core/config';\nimport { applyFilterFromTable } from '../../../features/variables/adhoc/actions';\nimport { MetricsPanelCtrl } from '../../../plugins/sdk';\nimport { dispatch } from '../../../store/store';\n\nimport { columnOptionsTab } from './column_options';\nimport { tablePanelEditor } from './editor';\nimport { TableRenderer } from './renderer';\nimport { transformDataToTable } from './transformers';\n\nexport class TablePanelCtrl extends MetricsPanelCtrl {\n  static templateUrl = 'module.html';\n\n  pageIndex: number;\n  dataRaw: any;\n  table: any;\n  renderer: any;\n  panelHasRowColorMode: boolean;\n  panelHasLinks: boolean;\n\n  panelDefaults = {\n    targets: [{}],\n    transform: 'timeseries_to_columns',\n    pageSize: null,\n    showHeader: true,\n    styles: [\n      {\n        type: 'date',\n        pattern: 'Time',\n        alias: 'Time',\n        dateFormat: 'YYYY-MM-DD HH:mm:ss',\n        align: 'auto',\n      },\n      {\n        unit: 'short',\n        type: 'number',\n        alias: '',\n        decimals: 2,\n        colors: ['rgba(245, 54, 54, 0.9)', 'rgba(237, 129, 40, 0.89)', 'rgba(50, 172, 45, 0.97)'],\n        colorMode: null,\n        pattern: '/.*/',\n        thresholds: [],\n        align: 'right',\n      },\n    ],\n    columns: [],\n\n    fontSize: '100%',\n    sort: { col: 0, desc: true },\n  };\n\n  static $inject = ['$scope', '$injector', 'annotationsSrv', '$sanitize'];\n\n  constructor(\n    $scope: IScope,\n    $injector: IAngularStatic['injector'],\n    private annotationsSrv: AnnotationsSrv,\n    private $sanitize: any\n  ) {\n    super($scope, $injector);\n\n    this.pageIndex = 0;\n\n    if (this.panel.styles === void 0) {\n      this.panel.styles = this.panel.columns;\n      this.panel.columns = this.panel.fields;\n      delete this.panel.columns;\n      delete this.panel.fields;\n    }\n\n    defaults(this.panel, this.panelDefaults);\n\n    this.panelHasRowColorMode = Boolean(this.panel.styles.find((style: any) => style.colorMode === 'row'));\n    this.panelHasLinks = Boolean(this.panel.styles.find((style: any) => style.link));\n\n    this.events.on(PanelEvents.dataReceived, this.onDataReceived.bind(this));\n    this.events.on(PanelEvents.dataSnapshotLoad, this.onDataReceived.bind(this));\n    this.events.on(PanelEvents.editModeInitialized, this.onInitEditMode.bind(this));\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options', tablePanelEditor, 2);\n    this.addEditorTab('Column Styles', columnOptionsTab, 3);\n  }\n\n  migrateToPanel(type: string) {\n    this.onPluginTypeChange(config.panels[type]);\n  }\n\n  issueQueries(datasource: any) {\n    this.pageIndex = 0;\n\n    if (this.panel.transform === 'annotations') {\n      return this.annotationsSrv\n        .getAnnotations({\n          dashboard: this.dashboard,\n          panel: this.panel,\n          range: this.range,\n        })\n        .then((anno) => {\n          this.loading = false;\n          this.dataRaw = anno;\n          this.pageIndex = 0;\n          this.render();\n        });\n    }\n\n    return super.issueQueries(datasource);\n  }\n\n  onDataReceived(dataList: any) {\n    this.dataRaw = dataList;\n    this.pageIndex = 0;\n\n    // automatically correct transform mode based on data\n    if (this.dataRaw && this.dataRaw.length) {\n      if (isTableData(this.dataRaw[0])) {\n        this.panel.transform = 'table';\n      } else {\n        if (this.dataRaw[0].type === 'docs') {\n          this.panel.transform = 'json';\n        } else {\n          if (this.panel.transform === 'table' || this.panel.transform === 'json') {\n            this.panel.transform = 'timeseries_to_rows';\n          }\n        }\n      }\n    }\n\n    this.render();\n  }\n\n  render() {\n    this.table = transformDataToTable(this.dataRaw, this.panel);\n    this.table.sort(this.panel.sort);\n\n    this.renderer = new TableRenderer(\n      this.panel,\n      this.table,\n      this.dashboard.getTimezone(),\n      this.$sanitize,\n      this.templateSrv,\n      config.theme2\n    );\n\n    return super.render(this.table);\n  }\n\n  toggleColumnSort(col: any, colIndex: any) {\n    // remove sort flag from current column\n    if (this.table.columns[this.panel.sort.col]) {\n      this.table.columns[this.panel.sort.col].sort = false;\n    }\n\n    if (this.panel.sort.col === colIndex) {\n      if (this.panel.sort.desc) {\n        this.panel.sort.desc = false;\n      } else {\n        this.panel.sort.col = null;\n      }\n    } else {\n      this.panel.sort.col = colIndex;\n      this.panel.sort.desc = true;\n    }\n    this.render();\n  }\n\n  link(scope: IScope, elem: JQuery, attrs: any, ctrl: TablePanelCtrl) {\n    let data: any;\n    const panel = ctrl.panel;\n    let pageCount = 0;\n\n    function getTableHeight() {\n      let panelHeight = ctrl.height;\n\n      if (pageCount > 1) {\n        panelHeight -= 26;\n      }\n\n      return panelHeight - 31 + 'px';\n    }\n\n    function appendTableRows(tbodyElem: JQuery) {\n      ctrl.renderer.setTable(data);\n      tbodyElem.empty();\n      tbodyElem.html(ctrl.renderer.render(ctrl.pageIndex));\n    }\n\n    function switchPage(e: JQueryEventObject) {\n      const el = $(e.currentTarget);\n      ctrl.pageIndex = parseInt(el.text(), 10) - 1;\n      renderPanel();\n    }\n\n    function appendPaginationControls(footerElem: JQuery) {\n      footerElem.empty();\n\n      const pageSize = panel.pageSize || 100;\n      pageCount = Math.ceil(data.rows.length / pageSize);\n      if (pageCount === 1) {\n        return;\n      }\n\n      const startPage = Math.max(ctrl.pageIndex - 3, 0);\n      const endPage = Math.min(pageCount, startPage + 9);\n\n      const paginationList = $('<ul></ul>');\n\n      for (let i = startPage; i < endPage; i++) {\n        const activeClass = i === ctrl.pageIndex ? 'active' : '';\n        const pageLinkElem = $(\n          '<li><a class=\"table-panel-page-link pointer ' + activeClass + '\">' + (i + 1) + '</a></li>'\n        );\n        paginationList.append(pageLinkElem);\n      }\n\n      footerElem.append(paginationList);\n    }\n\n    function renderPanel() {\n      const panelElem = elem.parents('.panel-content');\n      const rootElem = elem.find('.table-panel-scroll');\n      const tbodyElem = elem.find('tbody');\n      const footerElem = elem.find('.table-panel-footer');\n\n      elem.css({ 'font-size': panel.fontSize });\n      panelElem.addClass('table-panel-content');\n\n      appendTableRows(tbodyElem);\n      appendPaginationControls(footerElem);\n\n      rootElem.css({ 'max-height': getTableHeight() });\n    }\n\n    // hook up link tooltips\n    elem.tooltip({\n      selector: '[data-link-tooltip]',\n    });\n\n    function addFilterClicked(e: JQueryEventObject) {\n      const filterData = $(e.currentTarget).data();\n      const options = {\n        datasource: panel.datasource,\n        key: data.columns[filterData.column].text,\n        value: data.rows[filterData.row][filterData.column],\n        operator: filterData.operator,\n      };\n\n      dispatch(applyFilterFromTable(options));\n    }\n\n    elem.on('click', '.table-panel-page-link', switchPage);\n    elem.on('click', '.table-panel-filter-link', addFilterClicked);\n\n    const unbindDestroy = scope.$on('$destroy', () => {\n      elem.off('click', '.table-panel-page-link');\n      elem.off('click', '.table-panel-filter-link');\n      unbindDestroy();\n    });\n\n    ctrl.events.on(PanelEvents.render, (renderData: unknown) => {\n      data = renderData || data;\n      if (data) {\n        renderPanel();\n      }\n      ctrl.renderingCompleted();\n    });\n  }\n}\n\nexport const plugin = new PanelPlugin(null);\nplugin.angularPanelCtrl = TablePanelCtrl;\nplugin.setNoPadding();\n","import { find, first, isArray, isString, escape } from 'lodash';\n\nimport {\n  escapeStringForRegex,\n  formattedValueToString,\n  getValueFormat,\n  ScopedVars,\n  stringStartsAsRegEx,\n  stringToJsRegex,\n  textUtil,\n  unEscapeStringFromRegex,\n  TimeZone,\n  dateTimeFormatISO,\n  dateTimeFormat,\n  GrafanaTheme2,\n} from '@grafana/data';\nimport { getTemplateSrv, TemplateSrv } from '@grafana/runtime';\n\nimport { ColumnOptionsCtrl } from './column_options';\nimport { ColumnRender, TableRenderModel, ColumnStyle } from './types';\n\nexport class TableRenderer {\n  formatters: any[] = [];\n  colorState: Record<string, string | null> = {};\n\n  constructor(\n    private panel: { styles: ColumnStyle[]; pageSize: number },\n    private table: TableRenderModel,\n    private timeZone: TimeZone,\n    private sanitize: (v: any) => any,\n    private templateSrv: TemplateSrv = getTemplateSrv(),\n    private theme: GrafanaTheme2\n  ) {\n    this.initColumns();\n  }\n\n  setTable(table: TableRenderModel) {\n    this.table = table;\n\n    this.initColumns();\n  }\n\n  initColumns() {\n    this.formatters = [];\n    this.colorState = {};\n\n    for (let colIndex = 0; colIndex < this.table.columns.length; colIndex++) {\n      const column = this.table.columns[colIndex];\n      column.title = column.text;\n\n      for (let i = 0; i < this.panel.styles.length; i++) {\n        const style = this.panel.styles[i];\n\n        const escapedPattern = stringStartsAsRegEx(style.pattern)\n          ? style.pattern\n          : escapeStringForRegex(unEscapeStringFromRegex(style.pattern));\n        const regex = stringToJsRegex(escapedPattern);\n        if (column.text.match(regex)) {\n          column.style = style;\n\n          if (style.alias) {\n            column.title = textUtil.escapeHtml(column.text.replace(regex, style.alias));\n          }\n\n          break;\n        }\n      }\n\n      this.formatters[colIndex] = this.createColumnFormatter(column);\n    }\n  }\n\n  getColorForValue(value: number, style: ColumnStyle) {\n    if (!style.thresholds || !style.colors) {\n      return null;\n    }\n    for (let i = style.thresholds.length; i > 0; i--) {\n      if (value >= style.thresholds[i - 1]) {\n        return this.theme.visualization.getColorByName(style.colors[i]);\n      }\n    }\n    return this.theme.visualization.getColorByName(first(style.colors));\n  }\n\n  defaultCellFormatter(v: any, style: ColumnStyle) {\n    if (v === null || v === void 0 || v === undefined) {\n      return '';\n    }\n\n    if (isArray(v)) {\n      v = v.join(', ');\n    }\n\n    if (style && style.sanitize) {\n      return this.sanitize(v);\n    } else {\n      return escape(v);\n    }\n  }\n\n  createColumnFormatter(column: ColumnRender) {\n    if (!column.style) {\n      return this.defaultCellFormatter;\n    }\n\n    if (column.style.type === 'hidden') {\n      return (v: any): undefined => undefined;\n    }\n\n    if (column.style.type === 'date') {\n      return (v: any) => {\n        if (v === undefined || v === null) {\n          return '-';\n        }\n\n        if (isArray(v)) {\n          v = v[0];\n        }\n\n        // if is an epoch (numeric string and len > 12)\n        if (isString(v) && !isNaN(v as any) && v.length > 12) {\n          v = parseInt(v, 10);\n        }\n\n        if (!column.style.dateFormat) {\n          return dateTimeFormatISO(v, {\n            timeZone: this.timeZone,\n          });\n        }\n\n        return dateTimeFormat(v, {\n          format: column.style.dateFormat,\n          timeZone: this.timeZone,\n        });\n      };\n    }\n\n    if (column.style.type === 'string') {\n      return (v: any) => {\n        if (isArray(v)) {\n          v = v.join(', ');\n        }\n\n        const mappingType = column.style.mappingType || 0;\n\n        if (mappingType === 1 && column.style.valueMaps) {\n          for (let i = 0; i < column.style.valueMaps.length; i++) {\n            const map = column.style.valueMaps[i];\n\n            if (v === null) {\n              if (map.value === 'null') {\n                return map.text;\n              }\n              continue;\n            }\n\n            // Allow both numeric and string values to be mapped\n            if ((!isString(v) && Number(map.value) === Number(v)) || map.value === v) {\n              this.setColorState(v, column.style);\n              return this.defaultCellFormatter(map.text, column.style);\n            }\n          }\n        }\n\n        if (mappingType === 2 && column.style.rangeMaps) {\n          for (let i = 0; i < column.style.rangeMaps.length; i++) {\n            const map = column.style.rangeMaps[i];\n\n            if (v === null) {\n              if (map.from === 'null' && map.to === 'null') {\n                return map.text;\n              }\n              continue;\n            }\n\n            if (Number(map.from) <= Number(v) && Number(map.to) >= Number(v)) {\n              this.setColorState(v, column.style);\n              return this.defaultCellFormatter(map.text, column.style);\n            }\n          }\n        }\n\n        if (v === null || v === void 0) {\n          return '-';\n        }\n\n        this.setColorState(v, column.style);\n        return this.defaultCellFormatter(v, column.style);\n      };\n    }\n\n    if (column.style.type === 'number') {\n      const valueFormatter = getValueFormat(column.unit || column.style.unit);\n\n      return (v: any) => {\n        if (v === null || v === void 0) {\n          return '-';\n        }\n\n        if (isNaN(v) || isArray(v)) {\n          return this.defaultCellFormatter(v, column.style);\n        }\n\n        this.setColorState(v, column.style);\n        return formattedValueToString(valueFormatter(v, column.style.decimals, null));\n      };\n    }\n\n    return (value: any) => {\n      return this.defaultCellFormatter(value, column.style);\n    };\n  }\n\n  setColorState(value: unknown, style: ColumnStyle) {\n    if (!style.colorMode) {\n      return;\n    }\n\n    if (value === null || value === void 0 || isArray(value)) {\n      return;\n    }\n\n    const numericValue = Number(value);\n    if (isNaN(numericValue)) {\n      return;\n    }\n\n    this.colorState[style.colorMode] = this.getColorForValue(numericValue, style);\n  }\n\n  renderRowVariables(rowIndex: number) {\n    const scopedVars: ScopedVars = {};\n    let cellVariable;\n    const row = this.table.rows[rowIndex];\n    for (let i = 0; i < row.length; i++) {\n      cellVariable = `__cell_${i}`;\n      scopedVars[cellVariable] = { value: row[i], text: row[i] ? row[i].toString() : '' };\n    }\n    return scopedVars;\n  }\n\n  formatColumnValue(colIndex: number, value: any) {\n    const fmt = this.formatters[colIndex];\n    if (fmt) {\n      return fmt(value);\n    }\n    return value;\n  }\n\n  renderCell(columnIndex: number, rowIndex: number, value: any, addWidthHack = false) {\n    value = this.formatColumnValue(columnIndex, value);\n\n    const column = this.table.columns[columnIndex];\n    const cellStyles = [];\n    let cellStyle = '';\n    const cellClasses = [];\n    let cellClass = '';\n\n    if (this.colorState.cell) {\n      cellStyles.push('background-color:' + this.colorState.cell);\n      cellClasses.push('table-panel-color-cell');\n      this.colorState.cell = null;\n    } else if (this.colorState.value) {\n      cellStyles.push('color:' + this.colorState.value);\n      this.colorState.value = null;\n    }\n    // because of the fixed table headers css only solution\n    // there is an issue if header cell is wider the cell\n    // this hack adds header content to cell (not visible)\n    let columnHtml = '';\n    if (addWidthHack) {\n      columnHtml = '<div class=\"table-panel-width-hack\">' + this.table.columns[columnIndex].title + '</div>';\n    }\n\n    if (value === undefined) {\n      cellStyles.push('display:none');\n      column.hidden = true;\n    } else {\n      column.hidden = false;\n    }\n\n    if (column.hidden === true) {\n      return '';\n    }\n\n    if (column.style && column.style.preserveFormat) {\n      cellClasses.push('table-panel-cell-pre');\n    }\n\n    if (column.style && column.style.align) {\n      const textAlign = find(ColumnOptionsCtrl.alignTypesEnum, ['text', column.style.align]);\n      if (textAlign && textAlign['value']) {\n        cellStyles.push(`text-align:${textAlign['value']}`);\n      }\n    }\n\n    if (cellStyles.length) {\n      cellStyle = ' style=\"' + cellStyles.join(';') + '\"';\n    }\n\n    if (column.style && column.style.link) {\n      // Render cell as link\n      const scopedVars = this.renderRowVariables(rowIndex);\n      scopedVars['__cell'] = { value: value, text: value ? value.toString() : '' };\n\n      const cellLink = this.templateSrv.replace(column.style.linkUrl, scopedVars, encodeURIComponent);\n      const sanitizedCellLink = textUtil.sanitizeUrl(cellLink);\n\n      const cellLinkTooltip = textUtil.escapeHtml(this.templateSrv.replace(column.style.linkTooltip, scopedVars));\n      const cellTarget = column.style.linkTargetBlank ? '_blank' : '';\n\n      cellClasses.push('table-panel-cell-link');\n\n      columnHtml += `<a href=\"${sanitizedCellLink}\" target=\"${cellTarget}\" data-link-tooltip data-original-title=\"${cellLinkTooltip}\" data-placement=\"right\"${cellStyle}>`;\n      columnHtml += `${value}`;\n      columnHtml += `</a>`;\n    } else {\n      columnHtml += value;\n    }\n\n    if (column.filterable) {\n      cellClasses.push('table-panel-cell-filterable');\n      columnHtml += `<a class=\"table-panel-filter-link\" data-link-tooltip data-original-title=\"Filter out value\" data-placement=\"bottom\"\n           data-row=\"${rowIndex}\" data-column=\"${columnIndex}\" data-operator=\"!=\">`;\n      columnHtml += `<i class=\"fa fa-search-minus\"></i>`;\n      columnHtml += `</a>`;\n      columnHtml += `<a class=\"table-panel-filter-link\" data-link-tooltip data-original-title=\"Filter for value\" data-placement=\"bottom\"\n           data-row=\"${rowIndex}\" data-column=\"${columnIndex}\" data-operator=\"=\">`;\n      columnHtml += `<i class=\"fa fa-search-plus\"></i>`;\n      columnHtml += `</a>`;\n    }\n\n    if (cellClasses.length) {\n      cellClass = ' class=\"' + cellClasses.join(' ') + '\"';\n    }\n\n    columnHtml = '<td' + cellClass + cellStyle + '>' + columnHtml + '</td>';\n    return columnHtml;\n  }\n\n  render(page: number) {\n    const pageSize = this.panel.pageSize || 100;\n    const startPos = page * pageSize;\n    const endPos = Math.min(startPos + pageSize, this.table.rows.length);\n    let html = '';\n\n    for (let y = startPos; y < endPos; y++) {\n      const row = this.table.rows[y];\n      let cellHtml = '';\n      let rowStyle = '';\n      const rowClasses = [];\n      let rowClass = '';\n      for (let i = 0; i < this.table.columns.length; i++) {\n        cellHtml += this.renderCell(i, y, row[i], y === startPos);\n      }\n\n      if (this.colorState.row) {\n        rowStyle = ' style=\"background-color:' + this.colorState.row + '\"';\n        rowClasses.push('table-panel-color-row');\n        this.colorState.row = null;\n      }\n\n      if (rowClasses.length) {\n        rowClass = ' class=\"' + rowClasses.join(' ') + '\"';\n      }\n\n      html += '<tr ' + rowClass + rowStyle + '>' + cellHtml + '</tr>';\n    }\n\n    return html;\n  }\n\n  render_values() {\n    const rows = [];\n    const visibleColumns = this.table.columns.filter((column) => !column.hidden);\n\n    for (let y = 0; y < this.table.rows.length; y++) {\n      const row = this.table.rows[y];\n      const newRow = [];\n      for (let i = 0; i < this.table.columns.length; i++) {\n        if (!this.table.columns[i].hidden) {\n          newRow.push(this.formatColumnValue(i, row[i]));\n        }\n      }\n      rows.push(newRow);\n    }\n    return {\n      columns: visibleColumns,\n      rows: rows,\n    };\n  }\n}\n","import { findIndex, isObject, map } from 'lodash';\n\nimport { Column, TableData } from '@grafana/data';\nimport TableModel, { mergeTablesIntoModel } from '../../../core/TableModel';\nimport TimeSeries from '../../../core/time_series2';\nimport flatten from '../../../core/utils/flatten';\n\nimport { TableTransform } from './types';\n\nconst transformers: { [key: string]: TableTransform } = {};\nexport const timeSeriesFormatFilterer = (data: any): any[] => {\n  if (!Array.isArray(data)) {\n    return data.datapoints ? [data] : [];\n  }\n\n  return data.reduce((acc, series) => {\n    if (!series.datapoints) {\n      return acc;\n    }\n\n    return acc.concat(series);\n  }, []);\n};\n\nexport const tableDataFormatFilterer = (data: any): any[] => {\n  if (!Array.isArray(data)) {\n    return data.columns ? [data] : [];\n  }\n\n  return data.reduce((acc, series) => {\n    if (!series.columns) {\n      return acc;\n    }\n\n    return acc.concat(series);\n  }, []);\n};\n\ntransformers['timeseries_to_rows'] = {\n  description: 'Time series to rows',\n  getColumns: () => {\n    return [];\n  },\n  transform: (data, panel, model) => {\n    model.columns = [{ text: 'Time', type: 'date' }, { text: 'Metric' }, { text: 'Value' }];\n    const filteredData = timeSeriesFormatFilterer(data);\n\n    for (let i = 0; i < filteredData.length; i++) {\n      const series = filteredData[i];\n      for (let y = 0; y < series.datapoints.length; y++) {\n        const dp = series.datapoints[y];\n        model.rows.push([dp[1], series.target, dp[0]]);\n      }\n    }\n  },\n};\n\ntransformers['timeseries_to_columns'] = {\n  description: 'Time series to columns',\n  getColumns: () => {\n    return [];\n  },\n  transform: (data, panel, model) => {\n    model.columns.push({ text: 'Time', type: 'date' });\n\n    // group by time\n    const points: any = {};\n    const filteredData = timeSeriesFormatFilterer(data);\n\n    for (let i = 0; i < filteredData.length; i++) {\n      const series = filteredData[i];\n      model.columns.push({ text: series.target });\n\n      for (let y = 0; y < series.datapoints.length; y++) {\n        const dp = series.datapoints[y];\n        const timeKey = dp[1].toString();\n\n        if (!points[timeKey]) {\n          points[timeKey] = { time: dp[1] };\n          points[timeKey][i] = dp[0];\n        } else {\n          points[timeKey][i] = dp[0];\n        }\n      }\n    }\n\n    for (const time in points) {\n      const point = points[time];\n      const values = [point.time];\n\n      for (let i = 0; i < filteredData.length; i++) {\n        const value = point[i];\n        values.push(value);\n      }\n\n      model.rows.push(values);\n    }\n  },\n};\n\ntransformers['timeseries_aggregations'] = {\n  description: 'Time series aggregations',\n  getColumns: () => {\n    return [\n      { text: 'Avg', value: 'avg' },\n      { text: 'Min', value: 'min' },\n      { text: 'Max', value: 'max' },\n      { text: 'Total', value: 'total' },\n      { text: 'Current', value: 'current' },\n      { text: 'Count', value: 'count' },\n    ];\n  },\n  transform: (data, panel, model) => {\n    let i, y;\n    model.columns.push({ text: 'Metric' });\n\n    for (i = 0; i < panel.columns.length; i++) {\n      model.columns.push({ text: panel.columns[i].text });\n    }\n\n    const filteredData = timeSeriesFormatFilterer(data);\n\n    for (i = 0; i < filteredData.length; i++) {\n      const series = new TimeSeries({\n        datapoints: filteredData[i].datapoints,\n        alias: filteredData[i].target,\n      });\n\n      series.getFlotPairs('connected');\n      const cells = [series.alias];\n\n      for (y = 0; y < panel.columns.length; y++) {\n        cells.push(series.stats[panel.columns[y].value]);\n      }\n\n      model.rows.push(cells);\n    }\n  },\n};\n\ntransformers['annotations'] = {\n  description: 'Annotations',\n  getColumns: () => {\n    return [];\n  },\n  transform: (data, panel, model) => {\n    model.columns.push({ text: 'Time', type: 'date' });\n    model.columns.push({ text: 'Title' });\n    model.columns.push({ text: 'Text' });\n    model.columns.push({ text: 'Tags' });\n\n    if (!data || !data.annotations || data.annotations.length === 0) {\n      return;\n    }\n\n    for (let i = 0; i < data.annotations.length; i++) {\n      const evt = data.annotations[i];\n      model.rows.push([evt.time, evt.title, evt.text, evt.tags]);\n    }\n  },\n};\n\ntransformers['table'] = {\n  description: 'Table',\n  getColumns: (data) => {\n    if (!data || data.length === 0) {\n      return [];\n    }\n\n    // Single query returns data columns as is\n    if (data.length === 1) {\n      return [...data[0].columns];\n    }\n\n    const filteredData = tableDataFormatFilterer(data);\n\n    // Track column indexes: name -> index\n    const columnNames: Record<string, number> = {};\n\n    // Union of all columns\n    const columns = filteredData.reduce((acc: Column[], series: TableData) => {\n      series.columns.forEach((col) => {\n        const { text } = col;\n        if (columnNames[text] === undefined) {\n          columnNames[text] = acc.length;\n          acc.push(col);\n        }\n      });\n      return acc;\n    }, []);\n\n    return columns;\n  },\n  transform: (data: any[], panel, model) => {\n    if (!data || data.length === 0) {\n      return;\n    }\n    const filteredData = tableDataFormatFilterer(data);\n    const noTableIndex = findIndex(filteredData, (d) => 'columns' in d && 'rows' in d);\n    if (noTableIndex < 0) {\n      throw {\n        message: `Result of query #${String.fromCharCode(\n          65 + noTableIndex\n        )} is not in table format, try using another transform.`,\n      };\n    }\n\n    mergeTablesIntoModel(model, ...filteredData);\n  },\n};\n\ntransformers['json'] = {\n  description: 'JSON Data',\n  getColumns: (data) => {\n    if (!data || data.length === 0) {\n      return [];\n    }\n\n    const names: Record<string, boolean> = {};\n    for (let i = 0; i < data.length; i++) {\n      const series = data[i];\n      if (series.type !== 'docs') {\n        continue;\n      }\n\n      // only look at 100 docs\n      const maxDocs = Math.min(series.datapoints.length, 100);\n      for (let y = 0; y < maxDocs; y++) {\n        const doc = series.datapoints[y];\n        const flattened = flatten(doc, {});\n        for (const propName in flattened) {\n          names[propName] = true;\n        }\n      }\n    }\n\n    return map(names, (value, key) => {\n      return { text: key, value: key };\n    });\n  },\n  transform: (data, panel, model) => {\n    let i, y, z;\n\n    for (const column of panel.columns) {\n      const tableCol: any = { text: column.text };\n\n      // if filterable data then set columns to filterable\n      if (data.length > 0 && data[0].filterable) {\n        tableCol.filterable = true;\n      }\n\n      model.columns.push(tableCol);\n    }\n\n    if (model.columns.length === 0) {\n      model.columns.push({ text: 'JSON' });\n    }\n\n    for (i = 0; i < data.length; i++) {\n      const series = data[i];\n\n      for (y = 0; y < series.datapoints.length; y++) {\n        const dp = series.datapoints[y];\n        const values = [];\n\n        if (isObject(dp) && panel.columns.length > 0) {\n          const flattened = flatten(dp);\n          for (z = 0; z < panel.columns.length; z++) {\n            values.push(flattened[panel.columns[z].value]);\n          }\n        } else {\n          values.push(JSON.stringify(dp));\n        }\n\n        model.rows.push(values);\n      }\n    }\n  },\n};\n\nfunction transformDataToTable(data: any, panel: any) {\n  const model = new TableModel();\n\n  if (!data || data.length === 0) {\n    return model;\n  }\n\n  const transformer = transformers[panel.transform];\n  if (!transformer) {\n    throw { message: 'Transformer ' + panel.transform + ' not found' };\n  }\n\n  transformer.transform(data, panel, model);\n  return model;\n}\n\nexport { transformers, transformDataToTable };\n","import { makeClassES5Compatible } from '@grafana/data';\nimport { loadPluginCss } from '@grafana/runtime';\nimport { MetricsPanelCtrl as MetricsPanelCtrlES6 } from '../angular/panel/metrics_panel_ctrl';\nimport { PanelCtrl as PanelCtrlES6 } from '../angular/panel/panel_ctrl';\nimport { QueryCtrl as QueryCtrlES6 } from '../angular/panel/query_ctrl';\n\nconst PanelCtrl = makeClassES5Compatible(PanelCtrlES6);\nconst MetricsPanelCtrl = makeClassES5Compatible(MetricsPanelCtrlES6);\nconst QueryCtrl = makeClassES5Compatible(QueryCtrlES6);\n\nexport { PanelCtrl, MetricsPanelCtrl, QueryCtrl, loadPluginCss };\n"],"names":["filter"],"sourceRoot":""}