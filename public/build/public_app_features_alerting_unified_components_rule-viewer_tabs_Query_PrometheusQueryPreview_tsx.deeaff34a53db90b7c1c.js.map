{"version":3,"file":"public_app_features_alerting_unified_components_rule-viewer_tabs_Query_PrometheusQueryPreview_tsx.deeaff34a53db90b7c1c.js","mappings":";;;;;;;;;;;;;;;;;AAAuC;AACX;AACF;AACe;AACD;;AAExC,oBAAoB,4BAA4B;AAChD,gBAAgB,sDAAS;AACzB;AACA,sBAAsB,wDAAe;AACrC,yBAAyB,0DAAmB;AAC5C;AACA;AACA,iBAAiB,gDAAE;AACnB;AACA,iCAAiC,QAAQ,mDAAQ;AACjD;AACA;AACA;AACA;AACA;AACA,iBAAiB,iDAAG;AACpB;AACA;AACA,KAAK;AACL;AACA;;AAEoB;AACpB;;;;;;;;;;;;;;;;;AC7BkB;AAEO;AACK;AAM9B,MAAM,yBAAyB,CAAC,EAAE,MAAM,MAAa;AACnD,SACE,2EAAC,aACC,2EAAC,2DAAQ,IAAC,OAAc,UAAU,EAAE,SAAS,8DAAa,EAAE,MAAM,SAAS,GAAG,CAChF;AAEJ;AAEA,iEAAe,sBAAsB,EAAC","sources":["webpack://grafana/./node_modules/@grafana/experimental/dist/esm/VisualQueryBuilder/components/RawQuery.js","webpack://grafana/./public/app/features/alerting/unified/components/rule-viewer/tabs/Query/PrometheusQueryPreview.tsx"],"sourcesContent":["import { cx, css } from '@emotion/css';\nimport Prism from 'prismjs';\nimport React from 'react';\nimport { textUtil } from '@grafana/data';\nimport { useTheme2 } from '@grafana/ui';\n\nfunction RawQuery({ query, language, className }) {\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n  const highlighted = Prism.highlight(query, language.grammar, language.name);\n  return /* @__PURE__ */ React.createElement(\n    \"div\",\n    {\n      className: cx(styles.editorField, \"prism-syntax-highlight\", className),\n      \"aria-label\": \"selector\",\n      dangerouslySetInnerHTML: { __html: textUtil.sanitize(highlighted) }\n    }\n  );\n}\nconst getStyles = (theme) => {\n  return {\n    editorField: css({\n      fontFamily: theme.typography.fontFamilyMonospace,\n      fontSize: theme.typography.bodySmall.fontSize\n    })\n  };\n};\n\nexport { RawQuery };\n//# sourceMappingURL=RawQuery.js.map\n","import React from 'react';\n\nimport { RawQuery } from '@grafana/experimental';\nimport { promqlGrammar } from '@grafana/prometheus';\n\ninterface Props {\n  query: string;\n}\n\nconst PrometheusQueryPreview = ({ query }: Props) => {\n  return (\n    <pre>\n      <RawQuery query={query} language={{ grammar: promqlGrammar, name: 'promql' }} />\n    </pre>\n  );\n};\n\nexport default PrometheusQueryPreview;\n"],"names":[],"sourceRoot":""}